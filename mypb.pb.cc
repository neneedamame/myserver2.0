// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mypb.proto

#include "mypb.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace mypb {
PROTOBUF_CONSTEXPR dataHeader::dataHeader(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.bodysize_)*/uint64_t{0u}
  , /*decltype(_impl_.request_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct dataHeaderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR dataHeaderDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~dataHeaderDefaultTypeInternal() {}
  union {
    dataHeader _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 dataHeaderDefaultTypeInternal _dataHeader_default_instance_;
PROTOBUF_CONSTEXPR dataBody_login_register::dataBody_login_register(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct dataBody_login_registerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR dataBody_login_registerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~dataBody_login_registerDefaultTypeInternal() {}
  union {
    dataBody_login_register _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 dataBody_login_registerDefaultTypeInternal _dataBody_login_register_default_instance_;
PROTOBUF_CONSTEXPR dataBody_getdata::dataBody_getdata(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.key_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct dataBody_getdataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR dataBody_getdataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~dataBody_getdataDefaultTypeInternal() {}
  union {
    dataBody_getdata _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 dataBody_getdataDefaultTypeInternal _dataBody_getdata_default_instance_;
}  // namespace mypb
static ::_pb::Metadata file_level_metadata_mypb_2eproto[3];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_mypb_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_mypb_2eproto = nullptr;

const uint32_t TableStruct_mypb_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mypb::dataHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mypb::dataHeader, _impl_.request_),
  PROTOBUF_FIELD_OFFSET(::mypb::dataHeader, _impl_.bodysize_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mypb::dataBody_login_register, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mypb::dataBody_login_register, _impl_.username_),
  PROTOBUF_FIELD_OFFSET(::mypb::dataBody_login_register, _impl_.password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::mypb::dataBody_getdata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::mypb::dataBody_getdata, _impl_.key_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::mypb::dataHeader)},
  { 8, -1, -1, sizeof(::mypb::dataBody_login_register)},
  { 16, -1, -1, sizeof(::mypb::dataBody_getdata)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::mypb::_dataHeader_default_instance_._instance,
  &::mypb::_dataBody_login_register_default_instance_._instance,
  &::mypb::_dataBody_getdata_default_instance_._instance,
};

const char descriptor_table_protodef_mypb_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nmypb.proto\022\004mypb\"B\n\ndataHeader\022\"\n\007requ"
  "est\030\001 \001(\0162\021.mypb.RequestType\022\020\n\010bodysize"
  "\030\002 \001(\006\"=\n\027dataBody_login_register\022\020\n\010use"
  "rname\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\037\n\020dataBod"
  "y_getdata\022\013\n\003key\030\001 \001(\t*Z\n\013RequestType\022\026\n"
  "\022REQUEST_TYPE_LOGIN\020\000\022\030\n\024REQUEST_TYPE_GE"
  "TDATA\020\001\022\031\n\025REQUEST_TYPE_REGISTER\020\002b\006prot"
  "o3"
  ;
static ::_pbi::once_flag descriptor_table_mypb_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_mypb_2eproto = {
    false, false, 282, descriptor_table_protodef_mypb_2eproto,
    "mypb.proto",
    &descriptor_table_mypb_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_mypb_2eproto::offsets,
    file_level_metadata_mypb_2eproto, file_level_enum_descriptors_mypb_2eproto,
    file_level_service_descriptors_mypb_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_mypb_2eproto_getter() {
  return &descriptor_table_mypb_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_mypb_2eproto(&descriptor_table_mypb_2eproto);
namespace mypb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RequestType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_mypb_2eproto);
  return file_level_enum_descriptors_mypb_2eproto[0];
}
bool RequestType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class dataHeader::_Internal {
 public:
};

dataHeader::dataHeader(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mypb.dataHeader)
}
dataHeader::dataHeader(const dataHeader& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  dataHeader* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bodysize_){}
    , decltype(_impl_.request_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.bodysize_, &from._impl_.bodysize_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.request_) -
    reinterpret_cast<char*>(&_impl_.bodysize_)) + sizeof(_impl_.request_));
  // @@protoc_insertion_point(copy_constructor:mypb.dataHeader)
}

inline void dataHeader::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.bodysize_){uint64_t{0u}}
    , decltype(_impl_.request_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

dataHeader::~dataHeader() {
  // @@protoc_insertion_point(destructor:mypb.dataHeader)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void dataHeader::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void dataHeader::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void dataHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:mypb.dataHeader)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.bodysize_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.request_) -
      reinterpret_cast<char*>(&_impl_.bodysize_)) + sizeof(_impl_.request_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* dataHeader::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .mypb.RequestType request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_request(static_cast<::mypb::RequestType>(val));
        } else
          goto handle_unusual;
        continue;
      // fixed64 bodysize = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          _impl_.bodysize_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<uint64_t>(ptr);
          ptr += sizeof(uint64_t);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* dataHeader::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mypb.dataHeader)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .mypb.RequestType request = 1;
  if (this->_internal_request() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_request(), target);
  }

  // fixed64 bodysize = 2;
  if (this->_internal_bodysize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFixed64ToArray(2, this->_internal_bodysize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mypb.dataHeader)
  return target;
}

size_t dataHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mypb.dataHeader)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // fixed64 bodysize = 2;
  if (this->_internal_bodysize() != 0) {
    total_size += 1 + 8;
  }

  // .mypb.RequestType request = 1;
  if (this->_internal_request() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_request());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData dataHeader::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    dataHeader::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*dataHeader::GetClassData() const { return &_class_data_; }


void dataHeader::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<dataHeader*>(&to_msg);
  auto& from = static_cast<const dataHeader&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mypb.dataHeader)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bodysize() != 0) {
    _this->_internal_set_bodysize(from._internal_bodysize());
  }
  if (from._internal_request() != 0) {
    _this->_internal_set_request(from._internal_request());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void dataHeader::CopyFrom(const dataHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mypb.dataHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dataHeader::IsInitialized() const {
  return true;
}

void dataHeader::InternalSwap(dataHeader* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(dataHeader, _impl_.request_)
      + sizeof(dataHeader::_impl_.request_)
      - PROTOBUF_FIELD_OFFSET(dataHeader, _impl_.bodysize_)>(
          reinterpret_cast<char*>(&_impl_.bodysize_),
          reinterpret_cast<char*>(&other->_impl_.bodysize_));
}

::PROTOBUF_NAMESPACE_ID::Metadata dataHeader::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mypb_2eproto_getter, &descriptor_table_mypb_2eproto_once,
      file_level_metadata_mypb_2eproto[0]);
}

// ===================================================================

class dataBody_login_register::_Internal {
 public:
};

dataBody_login_register::dataBody_login_register(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mypb.dataBody_login_register)
}
dataBody_login_register::dataBody_login_register(const dataBody_login_register& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  dataBody_login_register* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mypb.dataBody_login_register)
}

inline void dataBody_login_register::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

dataBody_login_register::~dataBody_login_register() {
  // @@protoc_insertion_point(destructor:mypb.dataBody_login_register)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void dataBody_login_register::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
}

void dataBody_login_register::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void dataBody_login_register::Clear() {
// @@protoc_insertion_point(message_clear_start:mypb.dataBody_login_register)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* dataBody_login_register::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string username = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mypb.dataBody_login_register.username"));
        } else
          goto handle_unusual;
        continue;
      // string password = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mypb.dataBody_login_register.password"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* dataBody_login_register::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mypb.dataBody_login_register)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mypb.dataBody_login_register.username");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mypb.dataBody_login_register.password");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mypb.dataBody_login_register)
  return target;
}

size_t dataBody_login_register::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mypb.dataBody_login_register)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string username = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string password = 2;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData dataBody_login_register::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    dataBody_login_register::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*dataBody_login_register::GetClassData() const { return &_class_data_; }


void dataBody_login_register::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<dataBody_login_register*>(&to_msg);
  auto& from = static_cast<const dataBody_login_register&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mypb.dataBody_login_register)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void dataBody_login_register::CopyFrom(const dataBody_login_register& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mypb.dataBody_login_register)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dataBody_login_register::IsInitialized() const {
  return true;
}

void dataBody_login_register::InternalSwap(dataBody_login_register* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata dataBody_login_register::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mypb_2eproto_getter, &descriptor_table_mypb_2eproto_once,
      file_level_metadata_mypb_2eproto[1]);
}

// ===================================================================

class dataBody_getdata::_Internal {
 public:
};

dataBody_getdata::dataBody_getdata(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:mypb.dataBody_getdata)
}
dataBody_getdata::dataBody_getdata(const dataBody_getdata& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  dataBody_getdata* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:mypb.dataBody_getdata)
}

inline void dataBody_getdata::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.key_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

dataBody_getdata::~dataBody_getdata() {
  // @@protoc_insertion_point(destructor:mypb.dataBody_getdata)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void dataBody_getdata::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
}

void dataBody_getdata::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void dataBody_getdata::Clear() {
// @@protoc_insertion_point(message_clear_start:mypb.dataBody_getdata)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* dataBody_getdata::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "mypb.dataBody_getdata.key"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* dataBody_getdata::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mypb.dataBody_getdata)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "mypb.dataBody_getdata.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mypb.dataBody_getdata)
  return target;
}

size_t dataBody_getdata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mypb.dataBody_getdata)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData dataBody_getdata::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    dataBody_getdata::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*dataBody_getdata::GetClassData() const { return &_class_data_; }


void dataBody_getdata::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<dataBody_getdata*>(&to_msg);
  auto& from = static_cast<const dataBody_getdata&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mypb.dataBody_getdata)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void dataBody_getdata::CopyFrom(const dataBody_getdata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mypb.dataBody_getdata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool dataBody_getdata::IsInitialized() const {
  return true;
}

void dataBody_getdata::InternalSwap(dataBody_getdata* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.key_, lhs_arena,
      &other->_impl_.key_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata dataBody_getdata::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_mypb_2eproto_getter, &descriptor_table_mypb_2eproto_once,
      file_level_metadata_mypb_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace mypb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mypb::dataHeader*
Arena::CreateMaybeMessage< ::mypb::dataHeader >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mypb::dataHeader >(arena);
}
template<> PROTOBUF_NOINLINE ::mypb::dataBody_login_register*
Arena::CreateMaybeMessage< ::mypb::dataBody_login_register >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mypb::dataBody_login_register >(arena);
}
template<> PROTOBUF_NOINLINE ::mypb::dataBody_getdata*
Arena::CreateMaybeMessage< ::mypb::dataBody_getdata >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mypb::dataBody_getdata >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
